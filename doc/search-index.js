var searchIndex = {};
searchIndex["gprs"] = {"doc":"","items":[[0,"permutation","gprs","slice permutation",null,null],[8,"Permutation","gprs::permutation","Get all permutations from a slice\n# Examples\nget previous permutation:",null,null],[10,"prev_permutation","","get previous permutation, if there is no more, return false",0,{"inputs":[{"name":"permutation"}],"output":{"name":"bool"}}],[10,"next_permutation","","get next permutation, if there is no more, return false",0,{"inputs":[{"name":"permutation"}],"output":{"name":"bool"}}],[0,"heap","gprs","Heap operations",null,null],[3,"HeapComparator","gprs::heap","Operations when user version comparator was present",null,null],[8,"HeapOperation","","Heap operations by default\n# Examples\nconstruct maximum heap:",null,null],[10,"compare_by","","let user choice to construct neither minimum heap or maximum heap",1,{"inputs":[{"name":"heapoperation"},{"name":"fn"}],"output":{"name":"heapcomparator"}}],[10,"make_heap","","construct maximum heap",1,{"inputs":[{"name":"heapoperation"}],"output":null}],[10,"sort_heap","","sort a maximum heap",1,{"inputs":[{"name":"heapoperation"}],"output":null}],[10,"push_heap","","push a new item to a heap",1,{"inputs":[{"name":"heapoperation"}],"output":null}],[10,"pop_heap","","pop an item from a heap",1,{"inputs":[{"name":"heapoperation"}],"output":null}],[11,"make_heap","","make heap from unordered slice\n# Examples\nbasic usage:",2,{"inputs":[{"name":"heapcomparator"}],"output":null}],[11,"push_heap","","push a new item to a heap\n# Examples\nbasic usage:",2,{"inputs":[{"name":"heapcomparator"}],"output":null}],[11,"pop_heap","","pop an item from heap\n# Examples\nbasic usage:",2,{"inputs":[{"name":"heapcomparator"}],"output":null}],[11,"sort_heap","","sort a heap\n# Examples\nbasic usage:  ",2,{"inputs":[{"name":"heapcomparator"}],"output":null}],[0,"rotate","gprs","rotate slice",null,null],[8,"Rotatable","gprs::rotate","Rotate slice\n# Examples\nbasic usage:",null,null],[10,"rotate","","swap self[0..mid] and self[mid, self.len()]",3,{"inputs":[{"name":"rotatable"},{"name":"usize"}],"output":null}]],"paths":[[8,"Permutation"],[8,"HeapOperation"],[3,"HeapComparator"],[8,"Rotatable"]]};
initSearch(searchIndex);
